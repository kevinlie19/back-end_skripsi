type User {
  id: ID! @id
  email: String! @unique
  password: String!
  name: String!
  avatar: Avatar @relation(name: "UserAvatar")
  avatarCollection: [Avatar] @relation(name: "AvatarCollection")
  # badge: [Badge]
  highestScore: Int! @default(value: 0)
  point: Int! @default(value: 0)
  # exams: [Exam]
  progress: Progress!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

# type Exam {
#   id: ID! @id
#   category: QuestionEnum!
#   score: Int!
#   choices: [Choice]
# }

type Progress {
  id: ID! @id
  Paket1: Int! @default(value: 0)
  Paket2: Int! @default(value: 0)
  Paket3: Int! @default(value: 0)
}

type Avatar {
  id: ID! @id
  image: String!
  price: Int!
}

# type Badge {
#   id: ID! @id
#   name: String!
# }

type CategoryConditionEnum {
  id: ID! @id
  Category: QuestionEnum
  score: Int!
}

type Question {
  id: ID! @id
  description: String!
  choices: [Choice!]!
  category: QuestionEnum!
}

type Choice {
  id: ID! @id
  question: Question
  answer: String!
  correct: Boolean! @default(value: false)
}

enum QuestionEnum {
  Paket1
  Paket2
  Paket3
}
